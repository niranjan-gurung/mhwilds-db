// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using mhwilds_api.Services;

#nullable disable

namespace mhwilds_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250713180432_RemovedElderSealWeaponModel")]
    partial class RemovedElderSealWeaponModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ArmourSkillRank", b =>
                {
                    b.Property<int>("ArmoursId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillsId")
                        .HasColumnType("integer");

                    b.HasKey("ArmoursId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("ArmourSkillRank");
                });

            modelBuilder.Entity("BaseWeaponSkillRank", b =>
                {
                    b.Property<int>("BaseWeaponId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillsId")
                        .HasColumnType("integer");

                    b.HasKey("BaseWeaponId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("BaseWeaponSkillRank", (string)null);
                });

            modelBuilder.Entity("CharmRankSkillRank", b =>
                {
                    b.Property<int>("CharmsId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillsId")
                        .HasColumnType("integer");

                    b.HasKey("CharmsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("CharmRankSkillRank");
                });

            modelBuilder.Entity("DecorationSkillRank", b =>
                {
                    b.Property<int>("DecorationsId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillsId")
                        .HasColumnType("integer");

                    b.HasKey("DecorationsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("DecorationSkillRank");
                });

            modelBuilder.Entity("mhwilds_api.Models.Armour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Defense")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Rank")
                        .HasColumnType("text");

                    b.Property<int>("Rarity")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<int>>("Slots")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("Slug")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Armours");
                });

            modelBuilder.Entity("mhwilds_api.Models.Charm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Charms");
                });

            modelBuilder.Entity("mhwilds_api.Models.CharmRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CharmId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Rarity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CharmId");

                    b.ToTable("CharmRanks");
                });

            modelBuilder.Entity("mhwilds_api.Models.Decoration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Rarity")
                        .HasColumnType("integer");

                    b.Property<int>("Slot")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Decorations");
                });

            modelBuilder.Entity("mhwilds_api.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("mhwilds_api.Models.SkillRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillRanks");
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.BaseWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Affinity")
                        .HasColumnType("integer");

                    b.Property<int>("Defense")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rarity")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<int>>("Slot")
                        .HasColumnType("integer[]");

                    b.Property<int>("WeaponType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WeaponType");

                    b.ToTable("Weapons");

                    b.HasDiscriminator<int>("WeaponType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Common.Ammo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<bool>("Rapid")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ammo");
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.ChargeBlade", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.Property<int>("Phial")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue(8);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.DualBlades", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.Greatsword", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.Gunlance", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.Hammer", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.HuntingHorn", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.InsectGlaive", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.HasDiscriminator().HasValue(10);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.Lance", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.HasDiscriminator().HasValue(6);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.Longsword", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.SwitchAxe", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.Property<int>("Phial")
                        .HasColumnType("integer");

                    b.ToTable("Weapons", t =>
                        {
                            t.Property("Phial")
                                .HasColumnName("SwitchAxe_Phial");
                        });

                    b.HasDiscriminator().HasValue(9);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.SwordAndShield", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.HasDiscriminator().HasValue(7);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Ranged.Bow", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.PrimitiveCollection<List<string>>("Coatings")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasDiscriminator().HasValue(13);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Ranged.HeavyBowgun", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.Property<int>("AmmoId")
                        .HasColumnType("integer");

                    b.HasIndex("AmmoId");

                    b.HasDiscriminator().HasValue(12);
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Ranged.LightBowgun", b =>
                {
                    b.HasBaseType("mhwilds_api.Models.Weapons.BaseWeapon");

                    b.Property<int>("AmmoId")
                        .HasColumnType("integer");

                    b.Property<string>("SpecialAmmo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("AmmoId");

                    b.ToTable("Weapons", t =>
                        {
                            t.Property("AmmoId")
                                .HasColumnName("LightBowgun_AmmoId");
                        });

                    b.HasDiscriminator().HasValue(11);
                });

            modelBuilder.Entity("ArmourSkillRank", b =>
                {
                    b.HasOne("mhwilds_api.Models.Armour", null)
                        .WithMany()
                        .HasForeignKey("ArmoursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mhwilds_api.Models.SkillRank", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BaseWeaponSkillRank", b =>
                {
                    b.HasOne("mhwilds_api.Models.Weapons.BaseWeapon", null)
                        .WithMany()
                        .HasForeignKey("BaseWeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mhwilds_api.Models.SkillRank", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CharmRankSkillRank", b =>
                {
                    b.HasOne("mhwilds_api.Models.CharmRank", null)
                        .WithMany()
                        .HasForeignKey("CharmsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mhwilds_api.Models.SkillRank", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DecorationSkillRank", b =>
                {
                    b.HasOne("mhwilds_api.Models.Decoration", null)
                        .WithMany()
                        .HasForeignKey("DecorationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mhwilds_api.Models.SkillRank", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Armour", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Resistances", "Resistances", b1 =>
                        {
                            b1.Property<int>("ArmourId")
                                .HasColumnType("integer");

                            b1.Property<int>("Dragon")
                                .HasColumnType("integer");

                            b1.Property<int>("Fire")
                                .HasColumnType("integer");

                            b1.Property<int>("Ice")
                                .HasColumnType("integer");

                            b1.Property<int>("Thunder")
                                .HasColumnType("integer");

                            b1.Property<int>("Water")
                                .HasColumnType("integer");

                            b1.HasKey("ArmourId");

                            b1.ToTable("Armours");

                            b1.WithOwner()
                                .HasForeignKey("ArmourId");
                        });

                    b.Navigation("Resistances");
                });

            modelBuilder.Entity("mhwilds_api.Models.CharmRank", b =>
                {
                    b.HasOne("mhwilds_api.Models.Charm", "Charm")
                        .WithMany("Ranks")
                        .HasForeignKey("CharmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Charm");
                });

            modelBuilder.Entity("mhwilds_api.Models.SkillRank", b =>
                {
                    b.HasOne("mhwilds_api.Models.Skill", "Skill")
                        .WithMany("Ranks")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.BaseWeapon", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Damage", "Damage", b1 =>
                        {
                            b1.Property<int>("BaseWeaponId")
                                .HasColumnType("integer");

                            b1.Property<int>("Display")
                                .HasColumnType("integer")
                                .HasColumnName("DamageDisplay");

                            b1.Property<int>("Raw")
                                .HasColumnType("integer")
                                .HasColumnName("DamageRaw");

                            b1.HasKey("BaseWeaponId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("BaseWeaponId");
                        });

                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Element", "Element", b1 =>
                        {
                            b1.Property<int>("BaseWeaponId")
                                .HasColumnType("integer");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("ElementType");

                            b1.HasKey("BaseWeaponId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("BaseWeaponId");

                            b1.OwnsOne("mhwilds_api.Models.Weapons.Common.Damage", "Damage", b2 =>
                                {
                                    b2.Property<int>("ElementBaseWeaponId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Display")
                                        .HasColumnType("integer")
                                        .HasColumnName("ElementDamageDisplay");

                                    b2.Property<int>("Raw")
                                        .HasColumnType("integer")
                                        .HasColumnName("ElementDamageRaw");

                                    b2.HasKey("ElementBaseWeaponId");

                                    b2.ToTable("Weapons");

                                    b2.WithOwner()
                                        .HasForeignKey("ElementBaseWeaponId");
                                });

                            b1.Navigation("Damage")
                                .IsRequired();
                        });

                    b.Navigation("Damage")
                        .IsRequired();

                    b.Navigation("Element");
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.ChargeBlade", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Sharpness", "Sharpness", b1 =>
                        {
                            b1.Property<int>("ChargeBladeId")
                                .HasColumnType("integer");

                            b1.Property<int>("Blue")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessBlue");

                            b1.Property<int>("Green")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessGreen");

                            b1.Property<int>("Orange")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessOrange");

                            b1.Property<int>("Purple")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessPurple");

                            b1.Property<int>("Red")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessRed");

                            b1.Property<int>("White")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessWhite");

                            b1.Property<int>("Yellow")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessYellow");

                            b1.HasKey("ChargeBladeId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("ChargeBladeId");
                        });

                    b.Navigation("Sharpness")
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.DualBlades", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Sharpness", "Sharpness", b1 =>
                        {
                            b1.Property<int>("DualBladesId")
                                .HasColumnType("integer");

                            b1.Property<int>("Blue")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessBlue");

                            b1.Property<int>("Green")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessGreen");

                            b1.Property<int>("Orange")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessOrange");

                            b1.Property<int>("Purple")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessPurple");

                            b1.Property<int>("Red")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessRed");

                            b1.Property<int>("White")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessWhite");

                            b1.Property<int>("Yellow")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessYellow");

                            b1.HasKey("DualBladesId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("DualBladesId");
                        });

                    b.Navigation("Sharpness")
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.Greatsword", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Sharpness", "Sharpness", b1 =>
                        {
                            b1.Property<int>("GreatswordId")
                                .HasColumnType("integer");

                            b1.Property<int>("Blue")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessBlue");

                            b1.Property<int>("Green")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessGreen");

                            b1.Property<int>("Orange")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessOrange");

                            b1.Property<int>("Purple")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessPurple");

                            b1.Property<int>("Red")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessRed");

                            b1.Property<int>("White")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessWhite");

                            b1.Property<int>("Yellow")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessYellow");

                            b1.HasKey("GreatswordId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("GreatswordId");
                        });

                    b.Navigation("Sharpness")
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.Gunlance", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Sharpness", "Sharpness", b1 =>
                        {
                            b1.Property<int>("GunlanceId")
                                .HasColumnType("integer");

                            b1.Property<int>("Blue")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessBlue");

                            b1.Property<int>("Green")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessGreen");

                            b1.Property<int>("Orange")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessOrange");

                            b1.Property<int>("Purple")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessPurple");

                            b1.Property<int>("Red")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessRed");

                            b1.Property<int>("White")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessWhite");

                            b1.Property<int>("Yellow")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessYellow");

                            b1.HasKey("GunlanceId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("GunlanceId");
                        });

                    b.Navigation("Sharpness")
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.Hammer", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Sharpness", "Sharpness", b1 =>
                        {
                            b1.Property<int>("HammerId")
                                .HasColumnType("integer");

                            b1.Property<int>("Blue")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessBlue");

                            b1.Property<int>("Green")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessGreen");

                            b1.Property<int>("Orange")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessOrange");

                            b1.Property<int>("Purple")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessPurple");

                            b1.Property<int>("Red")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessRed");

                            b1.Property<int>("White")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessWhite");

                            b1.Property<int>("Yellow")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessYellow");

                            b1.HasKey("HammerId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("HammerId");
                        });

                    b.Navigation("Sharpness")
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.HuntingHorn", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Sharpness", "Sharpness", b1 =>
                        {
                            b1.Property<int>("HuntingHornId")
                                .HasColumnType("integer");

                            b1.Property<int>("Blue")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessBlue");

                            b1.Property<int>("Green")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessGreen");

                            b1.Property<int>("Orange")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessOrange");

                            b1.Property<int>("Purple")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessPurple");

                            b1.Property<int>("Red")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessRed");

                            b1.Property<int>("White")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessWhite");

                            b1.Property<int>("Yellow")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessYellow");

                            b1.HasKey("HuntingHornId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("HuntingHornId");
                        });

                    b.Navigation("Sharpness")
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.InsectGlaive", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Sharpness", "Sharpness", b1 =>
                        {
                            b1.Property<int>("InsectGlaiveId")
                                .HasColumnType("integer");

                            b1.Property<int>("Blue")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessBlue");

                            b1.Property<int>("Green")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessGreen");

                            b1.Property<int>("Orange")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessOrange");

                            b1.Property<int>("Purple")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessPurple");

                            b1.Property<int>("Red")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessRed");

                            b1.Property<int>("White")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessWhite");

                            b1.Property<int>("Yellow")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessYellow");

                            b1.HasKey("InsectGlaiveId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("InsectGlaiveId");
                        });

                    b.Navigation("Sharpness")
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.Lance", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Sharpness", "Sharpness", b1 =>
                        {
                            b1.Property<int>("LanceId")
                                .HasColumnType("integer");

                            b1.Property<int>("Blue")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessBlue");

                            b1.Property<int>("Green")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessGreen");

                            b1.Property<int>("Orange")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessOrange");

                            b1.Property<int>("Purple")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessPurple");

                            b1.Property<int>("Red")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessRed");

                            b1.Property<int>("White")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessWhite");

                            b1.Property<int>("Yellow")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessYellow");

                            b1.HasKey("LanceId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("LanceId");
                        });

                    b.Navigation("Sharpness")
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.Longsword", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Sharpness", "Sharpness", b1 =>
                        {
                            b1.Property<int>("LongswordId")
                                .HasColumnType("integer");

                            b1.Property<int>("Blue")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessBlue");

                            b1.Property<int>("Green")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessGreen");

                            b1.Property<int>("Orange")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessOrange");

                            b1.Property<int>("Purple")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessPurple");

                            b1.Property<int>("Red")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessRed");

                            b1.Property<int>("White")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessWhite");

                            b1.Property<int>("Yellow")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessYellow");

                            b1.HasKey("LongswordId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("LongswordId");
                        });

                    b.Navigation("Sharpness")
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.SwitchAxe", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Sharpness", "Sharpness", b1 =>
                        {
                            b1.Property<int>("SwitchAxeId")
                                .HasColumnType("integer");

                            b1.Property<int>("Blue")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessBlue");

                            b1.Property<int>("Green")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessGreen");

                            b1.Property<int>("Orange")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessOrange");

                            b1.Property<int>("Purple")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessPurple");

                            b1.Property<int>("Red")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessRed");

                            b1.Property<int>("White")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessWhite");

                            b1.Property<int>("Yellow")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessYellow");

                            b1.HasKey("SwitchAxeId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("SwitchAxeId");
                        });

                    b.Navigation("Sharpness")
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Melee.SwordAndShield", b =>
                {
                    b.OwnsOne("mhwilds_api.Models.Weapons.Common.Sharpness", "Sharpness", b1 =>
                        {
                            b1.Property<int>("SwordAndShieldId")
                                .HasColumnType("integer");

                            b1.Property<int>("Blue")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessBlue");

                            b1.Property<int>("Green")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessGreen");

                            b1.Property<int>("Orange")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessOrange");

                            b1.Property<int>("Purple")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessPurple");

                            b1.Property<int>("Red")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessRed");

                            b1.Property<int>("White")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessWhite");

                            b1.Property<int>("Yellow")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer")
                                .HasColumnName("SharpnessYellow");

                            b1.HasKey("SwordAndShieldId");

                            b1.ToTable("Weapons");

                            b1.WithOwner()
                                .HasForeignKey("SwordAndShieldId");
                        });

                    b.Navigation("Sharpness")
                        .IsRequired();
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Ranged.HeavyBowgun", b =>
                {
                    b.HasOne("mhwilds_api.Models.Weapons.Common.Ammo", "Ammo")
                        .WithMany()
                        .HasForeignKey("AmmoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ammo");
                });

            modelBuilder.Entity("mhwilds_api.Models.Weapons.Ranged.LightBowgun", b =>
                {
                    b.HasOne("mhwilds_api.Models.Weapons.Common.Ammo", "Ammo")
                        .WithMany()
                        .HasForeignKey("AmmoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ammo");
                });

            modelBuilder.Entity("mhwilds_api.Models.Charm", b =>
                {
                    b.Navigation("Ranks");
                });

            modelBuilder.Entity("mhwilds_api.Models.Skill", b =>
                {
                    b.Navigation("Ranks");
                });
#pragma warning restore 612, 618
        }
    }
}
